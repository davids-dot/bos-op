<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.luoge.bos.op.invoice.park.enterprise.ParkEnterpriseDao">

    <sql id="cols">
        <trim>
            id, org_id, enterprise_id, enterprise_name,
            service_fee_rate, service_fee_payer_id,
            customer_id, customer_manager,
            park_provider_id, park_provider_additional_tax_rate, park_provider_water_tax_rate,
            park_provider_stamp_tax_rate, park_provider_income_tax_rate, park_provider_service_fee_rate,
            distributor_id, distributor_service_fee_rate,
            create_time, update_time, value_added_tax_type,include_tax_rate
        </trim>
    </sql>

    <insert id="batchInsertOnConflictIgnore" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        insert ignore into inv_park_enterprise (org_id, enterprise_id, enterprise_name,
        service_fee_rate, create_time, update_time)
        values
        <foreach collection="parkEnterprises" item="parkEnterprise" separator=",">
            ( #{parkEnterprise.orgId}, #{parkEnterprise.enterpriseId}, #{parkEnterprise.enterpriseName},
            #{parkEnterprise.serviceFeeRate}, #{parkEnterprise.createTime}, #{parkEnterprise.updateTime})
        </foreach>
    </insert>

    <select id="list" resultType="com.luoge.bos.op.invoice.entity.ParkEnterpriseDO">
        select
        <include refid="cols"/>
        from inv_park_enterprise
        order by org_id, enterprise_id
    </select>

    <select id="get" resultType="com.luoge.bos.op.invoice.entity.ParkEnterpriseDO">
        select
        <include refid="cols"/>
        from inv_park_enterprise
        where enterprise_id = #{enterpriseId}
    </select>

    <select id="getOrg" resultType="com.luoge.bos.op.invoice.entity.ParkEnterpriseDO">
        select
        <include refid="cols"/>
        from inv_park_enterprise
        where enterprise_id = #{enterpriseId}
    </select>

    <select id="listByPage" resultType="com.luoge.bos.op.invoice.model.park.enterprise.ParkEnterpriseBO">
        select e.enterprise_id id,
        e.enterprise_name name,
        e.service_fee_rate fee_rate,
        p.name park_provider_name,
        d.name distributor_name,
        e.create_time
        from inv_park_enterprise e
        left join inv_park_provider p
        on e.park_provider_id = p.id
        left join inv_park_enterprise_distributor d
        on e.distributor_id = d.id
        <where>
            <if test="name != null and name != ''">
                and e.enterprise_name like concat('%',#{name},'%')
            </if>
            <if test="orgId > 0">
                and e.org_id = #{orgId}
            </if>
            <if test="startTime != null">
                and e.create_time >= #{startTime}
            </if>
            <if test="endTime != null">
                and #{endTime} > e.create_time
            </if>
        </where>
        order by e.id desc
    </select>

    <select id="getParkEnterpriseFee"
            resultType="com.luoge.bos.op.invoice.model.park.enterprise.ParkEnterpriseFeeBO">
        select e.enterprise_id                                                      id,
               e.service_fee_rate                                                   fee_rate,
               e.service_fee_payer_id,
               e.customer_id,
               e.customer_manager,
               e.park_provider_id,
               e.distributor_id,
               p.income_tax_type                                                    park_provider_income_tax_type,
               coalesce(e.park_provider_additional_tax_rate, p.additional_tax_rate) park_provider_additional_tax_rate,
               coalesce(e.park_provider_water_tax_rate, p.water_tax_rate)           park_provider_water_tax_rate,
               coalesce(e.park_provider_stamp_tax_rate, p.stamp_tax_rate)           park_provider_stamp_tax_rate,
               coalesce(e.park_provider_income_tax_rate, p.income_tax_rate)         park_provider_income_tax_rate,
               coalesce(e.park_provider_service_fee_rate, p.service_fee_rate)       park_provider_service_fee_rate,
               coalesce(e.distributor_service_fee_rate, d.fee_rate)                 distributor_service_fee_rate,
               coalesce(e.park_provider_value_added_tax_rate,
                        p.value_added_tax_rate)                                     park_provider_value_added_tax_rate,
               p.name                                                               park_provider_name,
               d.name                                                               distributor_name,
               coalesce(p.value_added_tax_formula_id, 0)                            value_added_tax_formula_id,
               coalesce(p.additional_tax_formula_id, 0)                             additional_tax_formula_id,
               coalesce(p.water_tax_formula_id, 0)                                  water_tax_formula_id,
               coalesce(p.stamp_tax_formula_id, 0)                                  stamp_tax_formula_id,
               coalesce(p.income_tax_formula_id, 0)                                 income_tax_formula_id,
               CASE WHEN p.is_include_tax THEN 1 ELSE 0 END AS                      is_include_tax,
               coalesce(e.include_tax_rate, p.include_tax_rate)                     include_tax_rate,
               coalesce(e.value_added_tax_type, p.value_added_tax_type)             value_added_tax_type
        from inv_park_enterprise e
                 left join inv_park_provider p
                           on e.park_provider_id = p.id
                 left join inv_park_enterprise_distributor d
                           on e.distributor_id = d.id
        where e.enterprise_id = #{id}
    </select>

    <delete id="delete">
        delete
        from inv_park_enterprise
        where enterprise_id = #{id}
    </delete>

    <update id="updateFeeSetting">
        update inv_park_enterprise
        set service_fee_rate                  = #{feeRate},
            service_fee_payer_id              = #{serviceFeePayerId},
            customer_id                       = #{customerId},
            customer_manager                  = #{customerManager},
            park_provider_id                  = #{parkProviderId},
            park_provider_additional_tax_rate = #{parkProviderAdditionalTaxRate},
            park_provider_water_tax_rate      = #{parkProviderWaterTaxRate},
            park_provider_stamp_tax_rate      = #{parkProviderStampTaxRate},
            park_provider_income_tax_rate     = #{parkProviderIncomeTaxRate},
            park_provider_service_fee_rate    = #{parkProviderServiceFeeRate},
            distributor_id                    = #{distributorId},
            distributor_service_fee_rate      = #{distributorServiceFeeRate},
            park_provider_value_added_tax_rate= #{parkProviderValueAddedTaxRate},
            value_added_tax_type              = #{valueAddedTaxType},
            include_tax_rate                  = #{includeTaxRate},
            update_time                       = #{updateTime}
        where enterprise_id = #{id}
    </update>


    <sql id="listEnterpriseForFeeSql">
        select
        e.enterprise_id,
        e.enterprise_name,
        max(p.name) park_provider_name,
        max(d.name) distributor_name
        from inv_park_enterprise e
        left join inv_park_provider p
        on e.park_provider_id = p.id
        left join inv_park_enterprise_distributor d
        on e.distributor_id = d.id
        <where>
            <if test="name != null and name != ''">
                and e.enterprise_name like concat('%',#{name},'%')
            </if>
            <if test="providerId > 0 ">
                and e.park_provider_id = #{providerId}
            </if>
            <if test="distributorId > 0 ">
                and e.distributor_id = #{distributorId}
            </if>
        </where>
        group by e.enterprise_id, e.enterprise_name
    </sql>

    <select id="listEnterpriseForFee" resultType="com.luoge.bos.op.invoice.model.query.EnterpriseFeeBO">
       <include refid="listEnterpriseForFeeSql"/>
    </select>

    <select id="listEnterpriseForFeeWithoutPage"
            resultType="com.luoge.bos.op.invoice.model.query.EnterpriseFeeBO">
        <include refid="listEnterpriseForFeeSql"/>
    </select>

</mapper>