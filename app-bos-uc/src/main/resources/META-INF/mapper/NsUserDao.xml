<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.luoge.bos.uc.dao.NsUserDao">

    <sql id="cols">
        <trim>
            id, org_id, name, username, mobile, email, passwd, avatar, remark, status, admin
        </trim>
    </sql>

    <select id="list" resultType="com.luoge.bos.uc.entity.UserDO">
        SELECT
        <include refid="cols"/>
        FROM iam_user
        WHERE org_id = #{orgId}
        <if test="name != null and name != ''">
            AND name = #{name}
        </if>
    </select>

    <insert id="insert" parameterType="com.luoge.bos.uc.entity.UserDO">
        INSERT INTO iam_user(org_id, name, username, mobile, email, passwd,
                             avatar, status, remark, admin, create_time, update_time)
        VALUES (#{orgId}, #{name}, #{username}, #{mobile}, #{email}, #{passwd},
                #{avatar}, 1, #{remark}, 0, #{createTime}, #{updateTime})
    </insert>

    <update id="update" parameterType="com.luoge.bos.uc.entity.UserDO">
        UPDATE iam_user
        SET name        = #{name},
            mobile      = #{mobile},
            email       = #{email},
            remark      = #{remark},
            avatar      = #{avatar},
            update_time = #{updateTime}
        WHERE id = #{id}
          AND org_id = #{orgId}
    </update>

    <update id="updateStatus">
        UPDATE iam_user
        SET status = #{status}
        WHERE org_id = #{orgId}
          AND id = #{userId}
    </update>

    <update id="resetPasswd">
        UPDATE iam_user
        SET passwd = #{passwd}
        WHERE org_id = #{orgId}
          AND id = #{userId}
    </update>

    <delete id="deleteUserRoles">
        DELETE
        FROM iam_user_role
        WHERE org_id = #{orgId}
          AND user_id = #{userId}
    </delete>

    <insert id="insertUserRoles">
        INSERT INTO iam_user_role(org_id, user_id, role_id, create_time) VALUES
        <foreach item="roleId" collection="roleIds" separator=",">
            (#{orgId}, #{userId}, #{roleId}, #{createTime})
        </foreach>
    </insert>

    <select id="getByUsername" resultType="com.luoge.bos.uc.entity.UserDO">
        SELECT
        <include refid="cols"/>
        FROM iam_user
        WHERE username = #{username}
    </select>
    <select id="getByMobile" resultType="com.luoge.bos.uc.entity.UserDO">
        SELECT
        <include refid="cols"/>
        FROM iam_user
        WHERE mobile = #{mobile}
    </select>

    <select id="getByEmail" resultType="com.luoge.bos.uc.entity.UserDO">
        SELECT
        <include refid="cols"/>
        FROM iam_user
        WHERE email = #{email}
    </select>

    <select id="listUserRoles" resultType="java.lang.Integer">
        SELECT role_id
        FROM iam_user_role
        WHERE org_id = #{orgId}
          AND user_id = #{userId}
    </select>

    <select id="listUserPermissions" resultType="java.lang.String">
        SELECT distinct permission_code
        FROM iam_authorization
        WHERE org_id = #{orgId}
        AND target_type = 1
        <if test="roles.size != 0">
            AND target_id IN
            <foreach collection="roles" item="role" index="index" open="(" close=")" separator=",">
                #{role}
            </foreach>
        </if>
    </select>
    <select id="get" resultType="com.luoge.bos.uc.entity.UserDO">
        SELECT
        <include refid="cols"/>
        FROM iam_user
        WHERE id = #{userId}
        AND org_id = #{orgId}
    </select>

    <select id="getById" resultType="com.luoge.bos.uc.entity.UserDO">
        SELECT
        <include refid="cols"/>
        FROM iam_user
        WHERE id = #{userId}
    </select>

</mapper>